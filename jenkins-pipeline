pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'mysonar'
    }
    stages {
        stage("CleanWS") {
            steps {
                cleanWs()
            }
        }
        stage("Code") {
            steps {
                git url: 'https://github.com/ThrineshJogu/Blood-Bank.git'
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv('mysonar') {
                    sh """
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectName=zomato \
                        -Dsonar.projectKey=zomato
                    """
                }
            }
        }
        stage("Quality Gates") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage("Images") {
            steps {
                sh 'docker build -t appimage .'
                sh 'docker build -t dbimage database/'
            }
        }
        stage("Scan Images") {
            steps {
                sh 'trivy image appimage'
                sh 'trivy image dbimage'
            }
        }
        stage("Tag & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub') {
                        sh '''
                            docker tag dbimage thrineshjogu/blood-bank:dbimage
                            docker tag appimage thrineshjogu/blood-bank:appimage
                            docker push thrineshjogu/blood-bank:dbimage
                            docker push thrineshjogu/blood-bank:appimage
                        '''
                    }
                }
            }
        }
    }
}
